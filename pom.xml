<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.pivotal.education.core-spring</groupId>
    <artifactId>parentCoreSpringProject</artifactId>
    <version>4.3.b.RELEASE</version>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.0.RELEASE</version>
    </parent>
    <properties>
        <!-- Override some defaults from Spring Boot. -->
        <java.version>1.8</java.version>
        <hibernate.version>4.3.11.Final</hibernate.version>
        <!-- Versions of other dependencies not in spring IO. -->
        <easymock.version>3.1</easymock.version>
        <hibernate.jmx.version>3.5.6-Final</hibernate.jmx.version>
        <jamon.version>2.81</jamon.version>
        <!-- Enable maven support for Servlet 3 - no web.xml -->
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>
    <dependencies>
        <!-- Although we are not using Spring Boot until Day 3, we do use SpringApplication 
			which is a Spring Boot class. The starters are also a convenient way of pulling 
			in the most common Spring and Testing dependencies. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Needed for the Spring jdbc namespace -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <!-- Database -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
    </dependencies>
    <!-- Dependencies we may need, and their versions -->
    <dependencyManagement>
        <dependencies>
            <!-- Course specific -->
            <dependency>
                <groupId>io.pivotal.education.core-spring</groupId>
                <artifactId>rewards-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.pivotal.education.core-spring</groupId>
                <artifactId>rewards-db</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.SR4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Other -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jmx</artifactId>
                <version>${hibernate.jmx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jamonapi</groupId>
                <artifactId>jamon</artifactId>
                <version>${jamon.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <!-- Ensure resources are exported correctly - conflict with Spring Boot -->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <!-- Set Java version -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Set Project Natures -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <wtpversion>2.0</wtpversion>
                    <sourceIncludes>
                        <sourceInclude>**/*.*</sourceInclude>
                    </sourceIncludes>
                    <!-- All of them are listed manually to solve a limitation of the mvn 
						eclipse plugin (https://issuetracker.springsource.com/browse/STS-2938). This 
						might cause some issues when migrating to the next version of Eclipse/STS) 
						also see spring-intro/pom.xml (projectnatures defined explicitely there as 
						well) -->
                    <projectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                        <projectnature>org.eclipse.jdt.core.javanature</projectnature>
                        <projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
                        <projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
                        <projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
                    </projectnatures>
                    <additionalBuildcommands>
                        <name>org.springframework.ide.eclipse.core.springbuilder</name>
                    </additionalBuildcommands>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!-- Ensure resources are handled correctly -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <modules>
        <!-- Section: intro -->
        <module>rewards-common</module>
        <module>rewards-db</module>
        <!-- Section: main -->
        <module>spring-intro</module>
        <module>javaconfig-dependency-injection</module>
        <module>annotations</module>
        <module>xml-di</module>
        <module>test</module>
        <module>aop</module>
        <module>jdbc</module>
        <module>tx</module>
        <module>jpa-spring-data</module>
        <module>mvc</module>
        <module>spring-boot-start</module>
        <module>security</module>
        <module>rest-ws</module>
        <module>ms-discovery-server</module>
        <module>ms-accounts-server</module>
        <module>ms-web-client</module>
        <module>xml-dependency-injection-best-practices</module>
        <module>jms</module>
        <module>jmx</module>
    </modules>
</project>
